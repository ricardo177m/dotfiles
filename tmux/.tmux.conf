# Basic config
# ---------------------------------------------------------------

# Set window title to session name
set -g set-titles on
set -g set-titles-string "tmux: #S"
setw -g automatic-rename

# Ensure run commands have normal PATH to work with
set -ga update-environment ' PATH'

# Copy SSH environment vars
set -ga update-environment ' SSH_AUTH_SOCK SSH_CONNECTION'

# Enable focus events for supporting terminals
set -g focus-events on

# Don't let apps change the window name
set -g allow-rename off

# Make the scrollback buffer not huge but big enough
set -g history-limit 5000

# Make the repeat time a bit longer; this works best when the repeating command
# involves CTRL so that releasing CTRL ends the repetition
set -g repeat-time 1000

# Enable cursor color (Cs, Cr)
#set -ga terminal-overrides '*:Cs=\E]12;%p1%s\007:Cr=\E]112\007'
# Enable cursor shape (Ss, Se)
#set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'
# Enable undercurl (Smulx)
#set -ga terminal-overrides '*:Smulx=\E[4::%p1%dm'
# Enable underline coloring (Setulc)
#set -ga terminal-overrides '*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Enable dim mode in Terminal.app (disabled because the esc char prints)
# set -ga terminal-overrides ',*:dim=\E[2m'

# Enable truecolor mode
#set -ga terminal-overrides 'xterm-256color*:RGB'
#set -ga terminal-overrides 'xterm-kitty:RGB'

# Lower escape timing for quicker response to scroll-buffer access
set -gs escape-time 0

# Keep transient things around longer
set -g display-time 4000
set -g display-panes-time 4000

# Copy current value of TERM_PROGRAM into environment
set -ga update-environment ' TERM_PROGRAM'
set -ga update-environment ' TMUX_PLUGIN_MANAGER_PATH'

# Key bindings
# ---------------------------------------------------------------
# Vi bindings for everything
set -g status-keys vi
set -g mode-keys vi

# Change the prefix to C-s
unbind-key C-b
set -g prefix C-s

# Unbind all the arrow keys since we're using vi bindings
unbind Left
unbind Down
unbind Up
unbind Right

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

unbind %
unbind '"'

bind t choose-tree

# Reload the config
bind R run -b ' \
  tmux source-file ~/.tmux.conf > /dev/null; \
  tmux display-message "Sourced .tmux.conf!"'

# Copy and paste
bind c copy-mode
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'term_copy > #{pane_tty}'
bind p run 'term_paste | tmux load-buffer -; tmux paste-buffer'

# Basic navigation
#bind -r [ previous-window
bind -r left previous-window
#bind -r ] next-window
bind -r right next-window
bind -n S-left previous-window
bind -n S-right next-window

# Pane splitting
# Horizontal with "\"
bind "\\" split-window -h -c "#{pane_current_path}"
# Horizontal full-height
bind '"' split-window -h -f -c "#{pane_current_path}"
# Vertical
bind "-" split-window -v -c "#{pane_current_path}"
# Vertical full-height
bind "=" split-window -v -f -c "#{pane_current_path}"

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r Space next-layout

# Don't use a hotkey for killing windows
unbind C-d

# Respawn a pane (helpful when executables have moved, as during update_all)
bind r respawn-pane -k

# Window movement
bind -r "<" swap-window -t -1\; select-window -t -1
bind -r ">" swap-window -t +1\; select-window -t +1

# Pane movement
unbind C-o
bind -r C-o rotate-window -U
unbind C-i
bind -r C-i rotate-window

# Automatically renumber windows
set -g renumber-windows on

# Create new windows (like Cmd-T to create new tabs)
bind -n C-t new-window -a -c "#{pane_current_path}"
bind t new-window -a -c "#{pane_current_path}"
bind T new-window -a -c "#{pane_current_path}" -e "ARCHPREFERENCE=x86_64" "arch -x86_64 /bin/zsh -l"

# sessions
# s -> list (default)
# $ -> rename (default)
# d -> detach

# Mouse mode
set -g mouse on

# Fix home & end keys
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# Use a fancy screen terminal if we're using a fancy xterm

#if '[ "$TERM" = "xterm-kitty" ]' \
#  "set -g default-terminal 'xterm-kitty'" \
#  "set -g default-terminal 'tmux'"

set -g default-terminal "xterm-256color"


# Navigation in vim and kitty
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "run-shell 'tmux_nav left'"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "run-shell 'tmux_nav bottom'"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "run-shell 'tmux_nav top'"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "run-shell 'tmux_nav right'"

# Status bar
# ---------------------------------------------------------------
# Update the status bar every few seconds
set -g status-interval 5

# <host> .... <windows> .... <info>
#if-shell "uname | grep -q Linux" \
#  "set -g status-left '#[reverse]\ue0b6#[noreverse] #h'" \
#  "set -g status-left '#[reverse]\ue0b6#[noreverse] #h'"

#  "set -g status-left '#[reverse]\ue0b6#[noreverse] #h'" \
#  "set -g status-left '#[reverse]\ue0b6#[noreverse] #h'"
#set -g status-left-length 30
set -g window-status-format ' #{?window_zoomed_flag, ,}#W '
set -g window-status-current-format ' #{?window_zoomed_flag, ,}#W '
set -g status-justify centre

# statusbar colors
set -g status-style 'bg=colour7,fg=colour0'
set -g window-status-style 'bg=colour7,fg=colour0'
set -g window-status-current-style 'bg=colour0,fg=colour7'

# window styles
# Use default foreground and background for active window;
# use dimmed background for inactive window
#set -g window-style 'bg=colour0'
#set -g window-active-style 'bg=colour16'

# pane styles
#set -g pane-border-style 'bg=colour0,fg=colour8'
#set -g pane-active-border-style 'bg=colour0,fg=colour8'
set -g pane-border-style 'fg=colour8'
set -g pane-active-border-style 'fg=colour8'

# message text
set -g message-style 'bg=colour3,fg=colour0'
set -g message-command-style 'bg=colour8,fg=colour0'

# pane number display
set -g display-panes-active-colour colour4 #blue
set -g display-panes-colour colour9 #orange

# clock
set -g clock-mode-colour colour2 #green

# search highlight
#set -g mode-style "fg=colour0,bg=colour12"

# Tmux plugins
# ---------------------------------------------------------------
#set -g status-right "#{prefix_highlight}#{battery_icon} #{battery_percentage} #{continuum_status} %m/%d %H:%M #[reverse]\ue0b4"
set -g @resurrect-dir "$CACHEDIR/tmux/resurrect"
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'
set -g @resurrect-capture-pane-contents 'on'
set -g @prefix_highlight_empty_prompt '    '
set -g @batt_icon_charge_tier1 ''
set -g @batt_icon_charge_tier2 ''
set -g @batt_icon_charge_tier3 ''
set -g @batt_icon_charge_tier4 ''
set -g @batt_icon_charge_tier5 ''
set -g @batt_icon_charge_tier6 ''
set -g @batt_icon_charge_tier7 ''
set -g @batt_icon_charge_tier8 ''
set -g @batt_icon_status_attached ''
set -g @batt_icon_status_charged 'ﮣ'
set -g @batt_icon_status_charging ''
set -g @batt_icon_status_discharging ''

# Saving shell history is buggy, avoid for now
# https://github.com/tmux-plugins/tmux-resurrect/issues/278#issuecomment-485759281
set -g @resurrect-save-shell-history 'off'

set -g @fingers-hint-format '#[fg=color2,bold]%s'
set -g @fingers-highlight-format '#[fg=color2,nobold,dim]%s'
set -g @fingers-main-action 'term_copy > #{pane_tty}'
set -g @fingers-pattern-0 '#[a-fA-F0-9]{3}'              # short CSS color
set -g @fingers-pattern-1 '#[a-fA-F0-9]{6}'              # long CSS color
set -g @fingers-pattern-3 '\$[:alnum:]]+(/[[:alnum:]]+)' # file path starting with a var

set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

run "$DATADIR/tmux/tmux-plugins/tpm/tpm"

